{{name}}.ts
import { 
    Address, 
    Cell,
    contractAddress
} from '@ton/core';
import { 
    {{name}} as {{name}}Wrapper
} from '../build/{{name}}/{{name}}_{{name}}';

export class {{name}} extends {{name}}Wrapper {
    constructor(address: Address, init?: {code: Cell; data: Cell}) {
        super(address, init);
    }

    static async fromInit(id: bigint, counter: bigint): Promise<{{name}}> {
        const __gen_init = await {{name}}Wrapper.init(id, counter);
        const address = contractAddress(0, __gen_init);
        return new {{name}}(address, __gen_init);
    }
    
    static fromAddress(address: Address): {{name}} {
        return new {{name}}(address);
    }

    // ToDo: your logic here
} 